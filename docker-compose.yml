# docker-compose.yml - PostgreSQL setup for local development and testing

services:
  # Main PostgreSQL database for local development
  postgres:
    image: postgres:15-alpine
    container_name: oilgas-postgres
    environment:
      POSTGRES_DB: oilgas_dev
      POSTGRES_USER: oilgas_user
      POSTGRES_PASSWORD: oilgas_pass
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d/migrations:ro
      - ./database/seeds:/docker-entrypoint-initdb.d/seeds:ro
      - ./database/init:/docker-entrypoint-initdb.d:ro
    networks:
      - oilgas-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U oilgas_user -d oilgas_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Test PostgreSQL database (separate for testing)
  postgres-test:
    image: postgres:15-alpine
    container_name: oilgas-postgres-test
    environment:
      POSTGRES_DB: oilgas_test
      POSTGRES_USER: oilgas_test_user
      POSTGRES_PASSWORD: oilgas_test_pass
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5433:5432"  # Different port for test DB
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d/migrations:ro
      - ./database/test-seeds:/docker-entrypoint-initdb.d/test-seeds:ro
      - ./database/init:/docker-entrypoint-initdb.d:ro
    networks:
      - oilgas-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U oilgas_test_user -d oilgas_test"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # PgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: oilgas-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@oilgas.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./database/pgadmin-servers.json:/pgadmin4/servers.json:ro
    networks:
      - oilgas-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Migration runner service for MDB data import
  migrator:
    build:
      context: .
      dockerfile: ./docker/migrator.Dockerfile
    container_name: oilgas-migrator
    environment:
      DEV_DATABASE_URL: postgresql://oilgas_user:oilgas_pass@postgres:5432/oilgas_dev
      TEST_DATABASE_URL: postgresql://oilgas_test_user:oilgas_test_pass@postgres-test:5432/oilgas_test
    volumes:
      - ./database/data/clean:/app/data:ro
      - ./database/migrations:/app/migrations:ro
      - ./database/logs:/app/logs
    networks:
      - oilgas-network
    depends_on:
      postgres:
        condition: service_healthy
      postgres-test:
        condition: service_healthy
    profiles:
      - migration  # Only run when explicitly requested

volumes:
  postgres_data:
    driver: local
  postgres_test_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  oilgas-network:
    driver: bridge
